I"aÄ<h1 id="orie-5582-monte-carlo-methods-in-financial-engineering-spring-2022">ORIE 5582: Monte Carlo Methods in Financial Engineering, Spring 2022</h1>
<h2 id="project-3-contral-variate-sampling">Project 3 Contral Variate Sampling</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">scipy.stats</span> <span class="k">as</span> <span class="n">st</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">numpy.matlib</span> <span class="k">as</span> <span class="n">mat</span>
<span class="o">%</span><span class="n">matplotlib</span> <span class="n">inline</span>
</code></pre></div></div>

<p>We know how complex SDEs can be approximately simulated via the
Euler method, which discretizes time and simulates a stochastic process as it evolves using
the dynamics described by the SDE at the current time. In this question, we will use this
approach to simulate</p>

<h3 id="part-1">Part 1</h3>
<p>Consider a <em>square-root interest-rate model</em>, where the interest rate follows the SDE:
\begin{equation<em>}
dr(t) = a(b-r(t))dt + \sigma \sqrt{r(t)}dW(t),
\end{equation</em>}
where ${W(t): t \geq 0}$ is a standard Brownian motion.
The process is <em>mean-reverting</em> in the sense that $r(t)$ is pulled toward $b$. 
The constant $b$ can be thought of as the long-run interest rate and $a$ can be thought of as the speed at which $r(t)$ reverts to $b$.
Choose the parameters as:
\(T = 1, \: a = 0.2, \: b = 0.1, \: \sigma = 0.05, \: r(0) = 0.05.\)
Weâ€™ll use standard Monte Carlo simulation with an Euler approximation to estimate the price of a
bond with payoff 1 and maturity $T$, i.e.,
\(B_0 = \mathbb{E}(e^{-\int_{0}^{T}r(u)\,du}).\)
Weâ€™ll use 1,000 macroreplications with a discretized time step size of 0.01 and provide a 95\% confidence interval for the bond price.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Initialize parameters.
</span><span class="n">T</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">a</span> <span class="o">=</span> <span class="mf">0.2</span><span class="p">;</span> <span class="n">b</span> <span class="o">=</span> <span class="mf">0.1</span><span class="p">;</span> <span class="n">sigma</span> <span class="o">=</span> <span class="mf">0.05</span><span class="p">;</span> <span class="n">r0</span> <span class="o">=</span> <span class="mf">0.05</span><span class="p">;</span> <span class="n">reps</span> <span class="o">=</span> <span class="mi">1000</span><span class="p">;</span>

<span class="c1"># Define estimation function.
</span><span class="k">def</span> <span class="nf">estimate_bond_price</span><span class="p">(</span><span class="n">T</span><span class="p">,</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">sigma</span><span class="p">,</span> <span class="n">r0</span><span class="p">,</span> <span class="n">reps</span><span class="p">,</span> <span class="n">step_size</span><span class="p">):</span>
    
    <span class="c1"># Initialize
</span>    <span class="n">m</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">T</span><span class="o">/</span><span class="n">step_size</span><span class="p">);</span> <span class="c1"># number of timeintervals
</span>    <span class="n">R</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">zeros</span><span class="p">((</span><span class="n">reps</span><span class="p">,</span><span class="n">m</span><span class="o">+</span><span class="mi">1</span><span class="p">));</span> <span class="n">R</span><span class="p">[:,</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">r0</span><span class="p">;</span> <span class="c1"># paths of interest rates
</span>    
    <span class="c1"># Simulate interest rates paths
</span>    <span class="n">Z</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">normal</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="p">[</span><span class="n">reps</span><span class="p">,</span> <span class="n">m</span><span class="p">]);</span> <span class="c1"># standard normal RVs
</span>    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">m</span><span class="p">):</span>
        <span class="n">R</span><span class="p">[:,</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">R</span><span class="p">[:,</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="p">(</span><span class="n">a</span><span class="o">*</span><span class="n">b</span> <span class="o">-</span> <span class="n">a</span><span class="o">*</span><span class="n">R</span><span class="p">[:,</span><span class="n">i</span><span class="p">])</span><span class="o">*</span><span class="n">step_size</span> <span class="o">+</span> <span class="n">sigma</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nb">abs</span><span class="p">(</span><span class="n">R</span><span class="p">[:,</span><span class="n">i</span><span class="p">]))</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">step_size</span><span class="p">)</span><span class="o">*</span><span class="n">Z</span><span class="p">[:,</span><span class="n">i</span><span class="p">]</span>
    <span class="n">discounted</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">prod</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="o">-</span><span class="n">R</span><span class="p">[:,</span><span class="mi">1</span><span class="p">:]</span><span class="o">*</span><span class="n">step_size</span><span class="p">),</span> <span class="n">axis</span> <span class="o">=</span> <span class="mi">1</span><span class="p">)</span>
    
    <span class="c1"># Estimate of the bond price
</span>    <span class="n">z_alpha</span> <span class="o">=</span> <span class="mf">1.96</span> <span class="c1"># quantile for 95% confidence
</span>    <span class="n">bond_price</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">discounted</span><span class="p">)</span>
    <span class="n">bond_std</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">std</span><span class="p">(</span><span class="n">discounted</span><span class="p">,</span> <span class="n">ddof</span> <span class="o">=</span> <span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">reps</span><span class="p">)</span>
    <span class="n">bond_lb</span> <span class="o">=</span> <span class="n">bond_price</span> <span class="o">-</span> <span class="n">z_alpha</span><span class="o">*</span><span class="n">bond_std</span> <span class="c1"># lower bound of CI
</span>    <span class="n">bond_ub</span> <span class="o">=</span> <span class="n">bond_price</span> <span class="o">+</span> <span class="n">z_alpha</span><span class="o">*</span><span class="n">bond_std</span> <span class="c1"># upper bound of CI
</span>    
    <span class="c1"># Print results
</span>    <span class="k">print</span><span class="p">(</span><span class="s">"The point estimator of the bond price is %.3f."</span> <span class="o">%</span> <span class="n">bond_price</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"The approximate 95%% confidence interval is [%.3f, %.3f]."</span> <span class="o">%</span> <span class="p">(</span><span class="n">bond_lb</span><span class="p">,</span> <span class="n">bond_ub</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"The approximate variance of the estimator is %.6f</span><span class="se">\n</span><span class="s">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">bond_std</span><span class="o">**</span><span class="mi">2</span><span class="p">))</span>
    <span class="k">return</span> <span class="n">bond_price</span><span class="p">,</span> <span class="n">discounted</span><span class="p">,</span> <span class="n">R</span>

<span class="c1"># Test for different step sizes
</span><span class="k">print</span><span class="p">(</span><span class="s">'For step size 0.01:'</span><span class="p">)</span>
<span class="n">bond_price1</span><span class="p">,</span> <span class="n">discounted1</span><span class="p">,</span> <span class="n">R1</span> <span class="o">=</span> <span class="n">estimate_bond_price</span><span class="p">(</span><span class="n">T</span><span class="p">,</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">sigma</span><span class="p">,</span> <span class="n">r0</span><span class="p">,</span> <span class="n">reps</span><span class="p">,</span> <span class="mf">0.01</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">'For step size 0.001:'</span><span class="p">)</span>
<span class="n">bond_price2</span><span class="p">,</span> <span class="n">discounted2</span><span class="p">,</span> <span class="n">R2</span> <span class="o">=</span> <span class="n">estimate_bond_price</span><span class="p">(</span><span class="n">T</span><span class="p">,</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">sigma</span><span class="p">,</span> <span class="n">r0</span><span class="p">,</span> <span class="n">reps</span><span class="p">,</span> <span class="mf">0.001</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>For step size 0.01:
The point estimator of the bond price is 0.947.
The approximate 95% confidence interval is [0.946, 0.947].
The approximate variance of the estimator is 0.000000

For step size 0.001:
The point estimator of the bond price is 0.947.
The approximate 95% confidence interval is [0.946, 0.947].
The approximate variance of the estimator is 0.000000
</code></pre></div></div>

<h2 id="part-2">Part 2</h2>
<p>We assume the stock price follows a two-factor stochastic volatility SDE:
\begin{eqnarray<em>}
dS(t) &amp;=&amp; rS(t)dt + \sqrt{V(t)}S(t) dX_1(t)<br />
dV(t) &amp;=&amp; a(b-V(t))dt + \sigma \sqrt{V(t)}dX_2(t)
\end{eqnarray</em>}
where $X = {(X_1(t), X_2(t)): t \geq 0}$ is a two-dimensional Brownian motion with zero drift and covariance matrix
\(\Sigma = \begin{bmatrix} 1 &amp; \rho \\ \rho &amp; 1 \end{bmatrix}.\)
Choose the parameters as:
\(T = 1,\: r = 0.05, \: a = 0.2, \: b = 0.1, \: \sigma = 0.1, \: \rho = 0.75, \: S(0) = 80, \: K = 80.\)
We assume that the initial value of the volatility process is the same as
its long-term mean, i.e., $V(0) = b$.
Weâ€™ll use standard Monte Carlo simulation with Euler approximations on $S$ and $V$ to estimate the price of a European call option, with strike $K$ and maturity $T$.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Initialize parameters.
</span><span class="n">T</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">r</span> <span class="o">=</span> <span class="mf">0.05</span><span class="p">;</span> <span class="n">a</span> <span class="o">=</span><span class="mf">0.2</span><span class="p">;</span> <span class="n">b</span> <span class="o">=</span> <span class="mf">0.1</span><span class="p">;</span> <span class="n">sigma</span> <span class="o">=</span> <span class="mf">0.1</span><span class="p">;</span> <span class="n">rho</span> <span class="o">=</span> <span class="mf">0.75</span><span class="p">;</span> <span class="n">S0</span> <span class="o">=</span> <span class="mi">80</span><span class="p">;</span> <span class="n">K</span> <span class="o">=</span> <span class="mi">80</span><span class="p">;</span> <span class="n">reps</span> <span class="o">=</span> <span class="mi">10000</span><span class="p">;</span> <span class="n">step_size</span> <span class="o">=</span> <span class="mf">0.05</span><span class="p">;</span>
<span class="n">m</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">T</span><span class="o">/</span><span class="n">step_size</span><span class="p">)</span> <span class="c1"># number of steps
</span><span class="n">V</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">zeros</span><span class="p">((</span><span class="n">reps</span><span class="p">,</span><span class="n">m</span><span class="o">+</span><span class="mi">1</span><span class="p">));</span> <span class="n">V</span><span class="p">[:,</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">b</span><span class="p">;</span> <span class="c1"># paths of the volatility
</span><span class="n">S</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">zeros</span><span class="p">((</span><span class="n">reps</span><span class="p">,</span><span class="n">m</span><span class="o">+</span><span class="mi">1</span><span class="p">));</span> <span class="n">S</span><span class="p">[:,</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">S0</span><span class="p">;</span> <span class="c1"># paths of the volatility
</span>
<span class="c1"># Simulate paths for stock prices
</span><span class="n">Z1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">normal</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="p">[</span><span class="n">reps</span><span class="p">,</span> <span class="n">m</span><span class="p">])</span> <span class="c1"># standard normal RVs
</span><span class="n">Z2</span> <span class="o">=</span> <span class="n">rho</span><span class="o">*</span><span class="n">Z1</span> <span class="o">+</span> <span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="n">rho</span><span class="o">**</span><span class="mi">2</span><span class="p">)</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">normal</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="p">[</span><span class="n">reps</span><span class="p">,</span> <span class="n">m</span><span class="p">])</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">m</span><span class="p">):</span>
    <span class="n">S</span><span class="p">[:,</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">S</span><span class="p">[:,</span><span class="n">i</span><span class="p">]</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">((</span><span class="n">r</span> <span class="o">-</span> <span class="n">V</span><span class="p">[:,</span><span class="n">i</span><span class="p">]</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">*</span><span class="n">step_size</span> <span class="o">+</span> <span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nb">abs</span><span class="p">(</span><span class="n">V</span><span class="p">[:,</span><span class="n">i</span><span class="p">])</span><span class="o">*</span><span class="n">step_size</span><span class="p">)</span><span class="o">*</span><span class="n">Z1</span><span class="p">[:,</span><span class="n">i</span><span class="p">])</span>
    <span class="n">V</span><span class="p">[:,</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">V</span><span class="p">[:,</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="p">(</span><span class="n">a</span><span class="o">*</span><span class="n">b</span> <span class="o">-</span> <span class="n">a</span><span class="o">*</span><span class="n">V</span><span class="p">[:,</span><span class="n">i</span><span class="p">])</span><span class="o">*</span><span class="n">step_size</span> <span class="o">+</span> <span class="n">sigma</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nb">abs</span><span class="p">(</span><span class="n">V</span><span class="p">[:,</span><span class="n">i</span><span class="p">])</span><span class="o">*</span><span class="n">step_size</span><span class="p">)</span><span class="o">*</span><span class="n">Z2</span><span class="p">[:,</span><span class="n">i</span><span class="p">]</span>
    
<span class="c1"># Estimate the option price
</span><span class="n">eucall_payoff</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="o">-</span><span class="n">r</span><span class="o">*</span><span class="n">T</span><span class="p">)</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">maximum</span><span class="p">((</span><span class="n">S</span><span class="p">[:,</span><span class="n">m</span><span class="p">]</span> <span class="o">-</span> <span class="n">K</span><span class="p">),</span> <span class="mi">0</span><span class="p">)</span>
<span class="n">eucall_price</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">eucall_payoff</span><span class="p">)</span>

<span class="c1"># Compute the confidence interval
</span><span class="n">z_alpha</span> <span class="o">=</span> <span class="mf">1.96</span> <span class="c1"># quantile for 95% confidence
</span><span class="n">eucall_std</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">std</span><span class="p">(</span><span class="n">eucall_payoff</span><span class="p">,</span> <span class="n">ddof</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">reps</span><span class="p">)</span> <span class="c1"># estimated standard deviation of the estimator
</span><span class="n">eucall_lb</span> <span class="o">=</span> <span class="n">eucall_price</span> <span class="o">-</span> <span class="n">z_alpha</span><span class="o">*</span><span class="n">eucall_std</span> <span class="c1"># lower bound of CI
</span><span class="n">eucall_ub</span> <span class="o">=</span> <span class="n">eucall_price</span> <span class="o">+</span> <span class="n">z_alpha</span><span class="o">*</span><span class="n">eucall_std</span> <span class="c1"># upper bound of CI
</span>
<span class="c1"># Show results
</span><span class="k">print</span><span class="p">(</span><span class="s">"The point estimator from the model above is %.3f."</span> <span class="o">%</span> <span class="n">eucall_price</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"The standard deviation of the estimator is approximately %.3f."</span> <span class="o">%</span> <span class="n">eucall_std</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"The approximate 95%% confidence interval is [%.3f, %.3f]."</span> <span class="o">%</span> <span class="p">(</span><span class="n">eucall_lb</span><span class="p">,</span> <span class="n">eucall_ub</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The point estimator from the model above is 11.818.
The standard deviation of the estimator is approximately 0.211.
The approximate 95% confidence interval is [11.405, 12.231].
</code></pre></div></div>

<h2 id="control-variate-on-different-cases">Control Variate On Different Cases</h2>

<p>We Consider a continuously monitored up-and-out call option as described in Question 2 of Homework 2, with parameters $K=80$, $b = 100$, $T=1$, $S(0) = 75$, $r = 0.045$ and $\sigma = 0.3$.
We then estimate the price of the option using standard Monte Carlo with 5,000 sample paths of the underlying asset ${S(t): 0 \leq t \leq T}$ with time discretized into intervals of width $2^{-10}$.</p>

<p>For each of the following control variates (to be used one at a time), Weâ€™ll provide a point estimate and 95\% confidence interval for the price of the option as well as an estimate of the variance reduction compared to the standard Monte Carlo estimate.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Initialize parameters.
</span><span class="n">S0</span> <span class="o">=</span> <span class="mi">75</span><span class="p">;</span> <span class="n">r</span> <span class="o">=</span> <span class="mf">0.045</span><span class="p">;</span> <span class="n">sigma</span> <span class="o">=</span> <span class="mf">0.3</span><span class="p">;</span> <span class="n">K</span> <span class="o">=</span> <span class="mi">80</span><span class="p">;</span> <span class="n">T</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span> <span class="n">m</span> <span class="o">=</span> <span class="mi">2</span><span class="o">**</span><span class="mi">10</span><span class="p">;</span> <span class="n">reps</span> <span class="o">=</span> <span class="mi">5000</span><span class="p">;</span>

<span class="c1"># Simulate paths for stock prices
</span><span class="n">Z</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">normal</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="p">[</span><span class="n">reps</span><span class="p">,</span> <span class="n">m</span><span class="o">+</span><span class="mi">1</span><span class="p">]);</span> <span class="n">Z</span><span class="p">[:,</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="c1"># standard normal RVs
</span><span class="n">R</span> <span class="o">=</span> <span class="n">sigma</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">T</span><span class="o">/</span><span class="n">m</span><span class="p">)</span><span class="o">*</span><span class="n">Z</span> <span class="o">+</span> <span class="p">(</span><span class="n">r</span> <span class="o">-</span> <span class="n">sigma</span><span class="o">**</span><span class="mi">2</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="n">T</span><span class="o">/</span><span class="n">m</span><span class="p">);</span> <span class="n">R</span><span class="p">[:,</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span> <span class="c1"># log returns
</span><span class="n">S</span> <span class="o">=</span> <span class="n">S0</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">cumsum</span><span class="p">(</span><span class="n">R</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">))</span><span class="c1"># cumulative sum over time
</span>
<span class="c1"># Estimate the option price
</span><span class="n">maxS</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">amax</span><span class="p">(</span><span class="n">S</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span> <span class="c1"># maximum for each sample path 
</span><span class="n">exercise</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">multiply</span><span class="p">((</span><span class="n">maxS</span> <span class="o">&lt;</span> <span class="n">b</span><span class="p">),(</span><span class="n">S</span><span class="p">[:,</span><span class="n">m</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">K</span><span class="p">))</span> <span class="c1"># indicator of whether the payoff is positive 
</span><span class="n">standard_payoff</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="o">-</span><span class="n">r</span><span class="o">*</span><span class="n">T</span><span class="p">)</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">multiply</span><span class="p">(</span><span class="n">exercise</span><span class="p">,(</span><span class="n">S</span><span class="p">[:,</span><span class="n">m</span><span class="p">]</span> <span class="o">-</span> <span class="n">K</span><span class="p">))</span>
<span class="n">standard_price</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">standard_payoff</span><span class="p">)</span>

<span class="c1"># Compute the confidence interval
</span><span class="n">z_alpha</span> <span class="o">=</span> <span class="mf">1.96</span> <span class="c1"># quantile for 95% confidence
</span><span class="n">standard_std</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">std</span><span class="p">(</span><span class="n">standard_payoff</span><span class="p">,</span> <span class="n">ddof</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">reps</span><span class="p">)</span> <span class="c1"># estimated standard deviation of the estimator
</span><span class="n">standard_lb</span> <span class="o">=</span> <span class="n">standard_price</span> <span class="o">-</span> <span class="n">z_alpha</span><span class="o">*</span><span class="n">standard_std</span> <span class="c1"># lower bound of CI
</span><span class="n">standard_ub</span> <span class="o">=</span> <span class="n">standard_price</span> <span class="o">+</span> <span class="n">z_alpha</span><span class="o">*</span><span class="n">standard_std</span> <span class="c1"># upper bound of CI
</span>
<span class="c1"># Show results
</span><span class="k">print</span><span class="p">(</span><span class="s">"The point estimator from standard Monte Carlo is %.3f."</span> <span class="o">%</span> <span class="n">standard_price</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"The standard deviation of the estimator is approximately %.3f."</span> <span class="o">%</span> <span class="n">standard_std</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"The approximate 95%% confidence interval is [%.3f, %.3f]."</span> <span class="o">%</span> <span class="p">(</span><span class="n">standard_lb</span><span class="p">,</span> <span class="n">standard_ub</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The point estimator from standard Monte Carlo is 0.864.
The standard deviation of the estimator is approximately 0.040.
The approximate 95% confidence interval is [0.787, 0.942].
</code></pre></div></div>

<h3 id="1-the-price-of-the-underlying-asset-at-the-time-of-expiration-ie-st">1 The price of the underlying asset at the time of expiration, i.e., $S(T)$.</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Compute the control-variate estimate of the original option price
</span><span class="n">ST_payoff</span> <span class="o">=</span> <span class="n">S</span><span class="p">[:,</span><span class="n">m</span><span class="p">]</span> <span class="c1"># asset price at expiration
</span><span class="n">the_lambda1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">cov</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">vstack</span><span class="p">((</span><span class="n">standard_payoff</span><span class="p">,</span><span class="n">ST_payoff</span><span class="p">)))[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">]</span><span class="o">/</span><span class="n">np</span><span class="p">.</span><span class="n">var</span><span class="p">(</span><span class="n">ST_payoff</span><span class="p">)</span> <span class="c1"># approximate optimal coefficient
</span><span class="n">cv1_payoff</span> <span class="o">=</span> <span class="n">standard_payoff</span> <span class="o">-</span> <span class="n">the_lambda1</span><span class="o">*</span><span class="p">(</span><span class="n">ST_payoff</span> <span class="o">-</span> <span class="n">S0</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="n">r</span><span class="o">*</span><span class="n">T</span><span class="p">))</span> <span class="c1"># control-variate estimate
</span><span class="n">cv1_price</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">cv1_payoff</span><span class="p">)</span>

<span class="c1"># Compute the confidence interval
</span><span class="n">z_alpha</span> <span class="o">=</span> <span class="mf">1.96</span> <span class="c1"># quantile for 95% confidence
</span><span class="n">cv1_std</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">std</span><span class="p">(</span><span class="n">cv1_payoff</span><span class="p">,</span> <span class="n">ddof</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">reps</span><span class="p">)</span> <span class="c1"># estimated standard deviation of the estimator
</span><span class="n">cv1_lb</span> <span class="o">=</span> <span class="n">cv1_price</span> <span class="o">-</span> <span class="n">z_alpha</span><span class="o">*</span><span class="n">cv1_std</span> <span class="c1"># lower bound of CI
</span><span class="n">cv1_ub</span> <span class="o">=</span> <span class="n">cv1_price</span> <span class="o">+</span> <span class="n">z_alpha</span><span class="o">*</span><span class="n">cv1_std</span> <span class="c1"># upper bound of CI
</span>
<span class="c1"># Show results
</span><span class="k">print</span><span class="p">(</span><span class="s">"The point estimator with the asset price at expiration as the control variate is %.3f."</span> <span class="o">%</span> <span class="n">cv1_price</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"The standard deviation of the estimator is approximately %.3f."</span> <span class="o">%</span> <span class="n">cv1_std</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"The approximate 95%% confidence interval is [%.3f, %.3f]."</span> <span class="o">%</span> <span class="p">(</span><span class="n">cv1_lb</span><span class="p">,</span> <span class="n">cv1_ub</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"The approximate variance is reduced from %.6f to %.6f."</span> <span class="o">%</span> <span class="p">(</span><span class="n">standard_std</span><span class="o">**</span><span class="mi">2</span><span class="p">,</span> <span class="n">cv1_std</span><span class="o">**</span><span class="mi">2</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The point estimator with the asset price at expiration as the control variate is 0.870.
The standard deviation of the estimator is approximately 0.039.
The approximate 95% confidence interval is [0.794, 0.947].
The approximate variance is reduced from 0.001563 to 0.001524.
</code></pre></div></div>

<h2 id="2-the-discounted-payoff-of-a-european-call-option-with-the-same-strike-maturity-and-dynamics-of-the-underlying-asset-ie-e-rtst---k">2 The discounted payoff of a European call option with the same strike, maturity, and dynamics of the underlying asset, i.e., $e^{-rT}[S(T) - K]^+$.</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Compute the European call option price analytically
</span><span class="n">d1</span> <span class="o">=</span> <span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">log</span><span class="p">(</span><span class="n">S0</span><span class="o">/</span><span class="n">K</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="n">r</span><span class="o">+</span><span class="mf">0.5</span><span class="o">*</span><span class="n">sigma</span><span class="o">**</span><span class="mi">2</span><span class="p">)</span><span class="o">*</span><span class="n">T</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="n">sigma</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">T</span><span class="p">))</span>
<span class="n">d2</span> <span class="o">=</span> <span class="n">d1</span> <span class="o">-</span> <span class="n">sigma</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">T</span><span class="p">)</span>
<span class="n">call_price</span> <span class="o">=</span> <span class="n">S0</span><span class="o">*</span><span class="n">st</span><span class="p">.</span><span class="n">norm</span><span class="p">.</span><span class="n">cdf</span><span class="p">(</span><span class="n">d1</span><span class="p">)</span> <span class="o">-</span> <span class="n">K</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="o">-</span><span class="n">r</span><span class="o">*</span><span class="n">T</span><span class="p">)</span><span class="o">*</span><span class="n">st</span><span class="p">.</span><span class="n">norm</span><span class="p">.</span><span class="n">cdf</span><span class="p">(</span><span class="n">d2</span><span class="p">)</span>

<span class="c1"># Compute the control-variate estimate of the original option price
</span><span class="n">call_payoff</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="o">-</span><span class="n">r</span><span class="o">*</span><span class="n">T</span><span class="p">)</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">maximum</span><span class="p">(</span><span class="n">S</span><span class="p">[:,</span><span class="n">m</span><span class="p">]</span> <span class="o">-</span> <span class="n">K</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="c1"># european call payoffs
</span><span class="n">the_lambda2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">cov</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">vstack</span><span class="p">((</span><span class="n">standard_payoff</span><span class="p">,</span><span class="n">call_payoff</span><span class="p">)))[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">]</span><span class="o">/</span><span class="n">np</span><span class="p">.</span><span class="n">var</span><span class="p">(</span><span class="n">call_payoff</span><span class="p">)</span> <span class="c1"># approximate optimal coefficient
</span><span class="n">cv2_payoff</span> <span class="o">=</span> <span class="n">standard_payoff</span> <span class="o">-</span> <span class="n">the_lambda2</span><span class="o">*</span><span class="p">(</span><span class="n">call_payoff</span> <span class="o">-</span> <span class="n">call_price</span><span class="p">)</span> <span class="c1"># control-variate estimate
</span><span class="n">cv2_price</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">cv2_payoff</span><span class="p">)</span>

<span class="c1"># Compute the confidence interval
</span><span class="n">z_alpha</span> <span class="o">=</span> <span class="mf">1.96</span> <span class="c1"># quantile for 95% confidence
</span><span class="n">cv2_std</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">std</span><span class="p">(</span><span class="n">cv2_payoff</span><span class="p">,</span> <span class="n">ddof</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">reps</span><span class="p">)</span> <span class="c1"># estimated standard deviation of the estimator
</span><span class="n">cv2_lb</span> <span class="o">=</span> <span class="n">cv2_price</span> <span class="o">-</span> <span class="n">z_alpha</span><span class="o">*</span><span class="n">cv2_std</span> <span class="c1"># lower bound of CI
</span><span class="n">cv2_ub</span> <span class="o">=</span> <span class="n">cv2_price</span> <span class="o">+</span> <span class="n">z_alpha</span><span class="o">*</span><span class="n">cv2_std</span> <span class="c1"># upper bound of CI
</span>
<span class="c1"># Show results
</span><span class="k">print</span><span class="p">(</span><span class="s">"The point estimator with the european call price as the control variate is %.3f."</span> <span class="o">%</span> <span class="n">cv2_price</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"The standard deviation of the estimator is approximately %.3f."</span> <span class="o">%</span> <span class="n">cv2_std</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"The approximate 95%% confidence interval is [%.3f, %.3f]."</span> <span class="o">%</span> <span class="p">(</span><span class="n">cv2_lb</span><span class="p">,</span> <span class="n">cv2_ub</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"The approximate variance is reduced from %.6f to %.6f."</span> <span class="o">%</span> <span class="p">(</span><span class="n">standard_std</span><span class="o">**</span><span class="mi">2</span><span class="p">,</span> <span class="n">cv2_std</span><span class="o">**</span><span class="mi">2</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The point estimator with the european call price as the control variate is 0.866.
The standard deviation of the estimator is approximately 0.040.
The approximate 95% confidence interval is [0.788, 0.943].
The approximate variance is reduced from 0.001563 to 0.001561.
</code></pre></div></div>

<h2 id="3-an-indicator-for-whether-or-not-the-barrier-option-has-a-positive-payoff-ie">3. An indicator for whether or not the barrier option has a positive payoff, i.e.,</h2>
<p>\(\mathbf{1}\{\max_{0 \leq t \leq T} S(t) &lt; b \text{ and } S(T) &gt; K \}.\)</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Compute the probability to get positive payoff analytically
</span><span class="n">b_tilde</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">log</span><span class="p">(</span><span class="n">b</span><span class="o">/</span><span class="n">S0</span><span class="p">)</span><span class="o">/</span><span class="n">sigma</span>
<span class="n">K_tilde</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">log</span><span class="p">(</span><span class="n">K</span><span class="o">/</span><span class="n">S0</span><span class="p">)</span><span class="o">/</span><span class="n">sigma</span>
<span class="n">exe_prob</span> <span class="o">=</span> <span class="mi">1</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="n">st</span><span class="p">.</span><span class="n">norm</span><span class="p">.</span><span class="n">cdf</span><span class="p">(</span><span class="o">-</span><span class="n">b_tilde</span><span class="p">)</span><span class="o">-</span><span class="n">st</span><span class="p">.</span><span class="n">norm</span><span class="p">.</span><span class="n">cdf</span><span class="p">(</span><span class="n">K_tilde</span><span class="p">)</span><span class="o">+</span><span class="n">st</span><span class="p">.</span><span class="n">norm</span><span class="p">.</span><span class="n">cdf</span><span class="p">(</span><span class="n">K_tilde</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="n">b_tilde</span><span class="p">)</span>

<span class="c1"># Compute the control-variate estimate of the original option price
</span><span class="n">the_lambda3</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">cov</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">vstack</span><span class="p">((</span><span class="n">standard_payoff</span><span class="p">,</span><span class="n">exercise</span><span class="p">)))[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">]</span><span class="o">/</span><span class="n">np</span><span class="p">.</span><span class="n">var</span><span class="p">(</span><span class="n">exercise</span><span class="p">)</span> <span class="c1"># approximate optimal coefficient
</span><span class="n">cv3_payoff</span> <span class="o">=</span> <span class="n">standard_payoff</span> <span class="o">-</span> <span class="n">the_lambda3</span><span class="o">*</span><span class="p">(</span><span class="n">exercise</span> <span class="o">-</span> <span class="n">exe_prob</span><span class="p">)</span> <span class="c1"># control-variate estimate
</span><span class="n">cv3_price</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">cv3_payoff</span><span class="p">)</span>

<span class="c1"># Compute the confidence interval
</span><span class="n">z_alpha</span> <span class="o">=</span> <span class="mf">1.96</span> <span class="c1"># quantile for 95% confidence
</span><span class="n">cv3_std</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">std</span><span class="p">(</span><span class="n">cv3_payoff</span><span class="p">,</span> <span class="n">ddof</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">reps</span><span class="p">)</span> <span class="c1"># estimated standard deviation of the estimator
</span><span class="n">cv3_lb</span> <span class="o">=</span> <span class="n">cv3_price</span> <span class="o">-</span> <span class="n">z_alpha</span><span class="o">*</span><span class="n">cv3_std</span> <span class="c1"># lower bound of CI
</span><span class="n">cv3_ub</span> <span class="o">=</span> <span class="n">cv3_price</span> <span class="o">+</span> <span class="n">z_alpha</span><span class="o">*</span><span class="n">cv3_std</span> <span class="c1"># upper bound of CI
</span>
<span class="c1"># Show results
</span><span class="k">print</span><span class="p">(</span><span class="s">"The point estimator with the exercise probability as the control variate is %.3f."</span> <span class="o">%</span> <span class="n">cv3_price</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"The standard deviation of the estimator is approximately %.3f."</span> <span class="o">%</span> <span class="n">cv3_std</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"The approximate 95%% confidence interval is [%.3f, %.3f]."</span> <span class="o">%</span> <span class="p">(</span><span class="n">cv3_lb</span><span class="p">,</span> <span class="n">cv3_ub</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"The approximate variance is reduced from %.6f to %.6f."</span> <span class="o">%</span> <span class="p">(</span><span class="n">standard_std</span><span class="o">**</span><span class="mi">2</span><span class="p">,</span> <span class="n">cv3_std</span><span class="o">**</span><span class="mi">2</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The point estimator with the exercise probability as the control variate is 0.798.
The standard deviation of the estimator is approximately 0.024.
The approximate 95% confidence interval is [0.751, 0.845].
The approximate variance is reduced from 0.001563 to 0.000577.
</code></pre></div></div>

<font color="black">When $\lambda$ is estimated close to its optimal value, the variance of the estimator $Var(Y)$ should be reduced to $Var(Y)(1-\rho^2_{xy})$, where $\rho_{xy}$ denotes the correlation between $Y$ and the control variate.  
Among all the control variates chosen above, the exercise probability in (c) has a higher correlation with the barrier option payoff. As is shown above, the estimated correlation coefficient for control variates in (c) is 0.81, much higher than those in (a) and (b). Thus, the variance should be reduced more.</font>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">np</span><span class="p">.</span><span class="n">corrcoef</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">vstack</span><span class="p">((</span><span class="n">standard_payoff</span><span class="p">,</span><span class="n">ST_payoff</span><span class="p">,</span><span class="n">call_payoff</span><span class="p">,</span><span class="n">exercise</span><span class="p">)))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[ 1.        ,  0.15189176,  0.03695851,  0.78676706],
       [ 0.15189176,  1.        ,  0.89265425,  0.13531766],
       [ 0.03695851,  0.89265425,  1.        , -0.0410022 ],
       [ 0.78676706,  0.13531766, -0.0410022 ,  1.        ]])
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>
:ET