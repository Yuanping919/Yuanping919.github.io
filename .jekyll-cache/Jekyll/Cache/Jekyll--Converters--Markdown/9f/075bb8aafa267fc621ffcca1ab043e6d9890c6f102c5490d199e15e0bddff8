I"oÉ<h1 id="orie-5582-monte-carlo-methods-in-financial-engineering-spring-2022">ORIE 5582: Monte Carlo Methods in Financial Engineering, Spring 2022</h1>
<h2 id="project-4-stratified-sampling">Project 4 Stratified Sampling</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">scipy.stats</span> <span class="k">as</span> <span class="n">st</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="o">%</span><span class="n">matplotlib</span> <span class="n">inline</span>
</code></pre></div></div>

<p>Consider a discretely monitored Asian call option, with parameters $S(0) = 40$, $r=0.02$, $\sigma = 0.4$, $K = 35$, and $T = 1$ and time points $0 &lt; t_1 &lt; t_2 &lt; \cdots &lt; t_m = T$ with $m = 100$ and $t_i = iT/m$ for $i = 1, \ldots, m$.</p>

<p>For all parts,weâ€™ll use 10,000 replications (sample paths) and report a point estimate and 95\% confidence interval for the option price.</p>

<h2 id="part-1-standard-estimation-of-the-option-price">Part 1. Standard Estimation of the option price</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Initialize parameters.
</span><span class="n">S0</span> <span class="o">=</span> <span class="mi">40</span><span class="p">;</span> <span class="n">r</span> <span class="o">=</span> <span class="mf">0.02</span><span class="p">;</span> <span class="n">sigma</span> <span class="o">=</span> <span class="mf">0.4</span><span class="p">;</span> <span class="n">K</span> <span class="o">=</span> <span class="mi">35</span><span class="p">;</span> <span class="n">T</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">m</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span> <span class="n">reps</span> <span class="o">=</span> <span class="mi">10000</span> 

<span class="c1"># Simulate paths for stock prices
</span><span class="n">Z</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">normal</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="p">[</span><span class="n">reps</span><span class="p">,</span> <span class="n">m</span><span class="o">+</span><span class="mi">1</span><span class="p">]);</span> <span class="n">Z</span><span class="p">[:,</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="c1"># standard normal RVs
</span><span class="n">R</span> <span class="o">=</span> <span class="n">sigma</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">T</span><span class="o">/</span><span class="n">m</span><span class="p">)</span><span class="o">*</span><span class="n">Z</span> <span class="o">+</span> <span class="p">(</span><span class="n">r</span> <span class="o">-</span> <span class="n">sigma</span><span class="o">**</span><span class="mi">2</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="n">T</span><span class="o">/</span><span class="n">m</span><span class="p">);</span> <span class="n">R</span><span class="p">[:,</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span> <span class="c1"># log returns
</span><span class="n">S</span> <span class="o">=</span> <span class="n">S0</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">cumsum</span><span class="p">(</span><span class="n">R</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">))</span><span class="c1"># cumulative sum over time
</span>
<span class="c1"># Estimate the option price
</span><span class="n">standard_payoff</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="o">-</span><span class="n">r</span><span class="o">*</span><span class="n">T</span><span class="p">)</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">maximum</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">S</span><span class="p">[:,</span><span class="mi">1</span><span class="p">:],</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span> <span class="o">-</span> <span class="n">K</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
<span class="n">standard_price</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">standard_payoff</span><span class="p">)</span>

<span class="c1"># Compute the confidence interval
</span><span class="n">z_alpha</span> <span class="o">=</span> <span class="mf">1.96</span> <span class="c1"># quantile for 95% confidence
</span><span class="n">standard_std</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">std</span><span class="p">(</span><span class="n">standard_payoff</span><span class="p">,</span> <span class="n">ddof</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">reps</span><span class="p">)</span> <span class="c1"># sample standard deviation
</span><span class="n">standard_lb</span> <span class="o">=</span> <span class="n">standard_price</span> <span class="o">-</span> <span class="n">z_alpha</span><span class="o">*</span><span class="n">standard_std</span> <span class="c1"># lower bound of CI
</span><span class="n">standard_ub</span> <span class="o">=</span> <span class="n">standard_price</span> <span class="o">+</span> <span class="n">z_alpha</span><span class="o">*</span><span class="n">standard_std</span> <span class="c1"># upper bound of CI
</span>
<span class="c1"># Show results
</span><span class="k">print</span><span class="p">(</span><span class="s">"The point estimator from standard Monte Carlo is %.3f."</span> <span class="o">%</span> <span class="n">standard_price</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"The approximate standard deviation of the estimator is %.3f."</span> <span class="o">%</span> <span class="n">standard_std</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"The approximate 95%% confidence interval is [%.3f, %.3f]."</span> <span class="o">%</span> <span class="p">(</span><span class="n">standard_lb</span><span class="p">,</span> <span class="n">standard_ub</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The point estimator from standard Monte Carlo is 6.741.
The approximate standard deviation of the estimator is 0.081.
The approximate 95% confidence interval is [6.583, 6.900].
</code></pre></div></div>

<h2 id="part-2-stratified-samplings-on-st">Part 2. Stratified Samplings on $S(T)$</h2>

<p>In this part weâ€™ll use terminal stratification on $S(T)$ with proportional stratification and $d = 10$ equiprobable strata. To construct the confidence interval, we use the approach in which we calculate the sample variance within each stratum. Meanwhile, weâ€™ll plot 8 sample paths, one from each stratum.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Initialize parameters.
</span><span class="n">d</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span> <span class="n">all_ts</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="n">T</span><span class="o">/</span><span class="n">m</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">m</span><span class="o">+</span><span class="mi">1</span><span class="p">)]</span>

<span class="c1"># Define the function to generate brownian bridges
</span><span class="k">def</span> <span class="nf">generate_brownian_bridges</span><span class="p">(</span><span class="n">all_ts</span><span class="p">,</span><span class="n">W_T</span><span class="p">):</span>
    <span class="n">m</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">all_ts</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="n">T</span> <span class="o">=</span> <span class="n">all_ts</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span> <span class="n">reps</span> <span class="o">=</span> <span class="n">W_T</span><span class="p">.</span><span class="n">size</span><span class="p">;</span> <span class="n">dt</span> <span class="o">=</span> <span class="n">T</span><span class="o">/</span><span class="n">m</span><span class="p">;</span>
    <span class="n">W</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">zeros</span><span class="p">((</span><span class="n">reps</span><span class="p">,</span><span class="n">m</span><span class="o">+</span><span class="mi">1</span><span class="p">));</span> <span class="n">W</span><span class="p">[:,</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">W</span><span class="p">[:,</span><span class="n">m</span><span class="p">]</span> <span class="o">=</span> <span class="n">W_T</span><span class="p">.</span><span class="n">reshape</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
    <span class="c1"># Generate paths using conditional sampling
</span>    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">m</span><span class="o">-</span><span class="mi">1</span><span class="p">):</span>
        <span class="n">last_t</span> <span class="o">=</span> <span class="n">all_ts</span><span class="p">[</span><span class="n">i</span><span class="p">];</span> <span class="n">curr_t</span> <span class="o">=</span> <span class="n">all_ts</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
        <span class="n">Zi</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">randn</span><span class="p">(</span><span class="n">reps</span><span class="p">)</span>
        <span class="n">W</span><span class="p">[:,</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">T</span> <span class="o">-</span> <span class="n">curr_t</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="n">T</span> <span class="o">-</span> <span class="n">last_t</span><span class="p">)</span><span class="o">*</span><span class="n">W</span><span class="p">[:,</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="n">dt</span><span class="o">/</span><span class="p">(</span><span class="n">T</span> <span class="o">-</span> <span class="n">last_t</span><span class="p">)</span><span class="o">*</span><span class="n">W</span><span class="p">[:,</span><span class="n">m</span><span class="p">]</span> <span class="o">+</span> <span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">((</span><span class="n">T</span> <span class="o">-</span> <span class="n">curr_t</span><span class="p">)</span><span class="o">*</span><span class="n">dt</span><span class="o">/</span><span class="p">(</span><span class="n">T</span> <span class="o">-</span> <span class="n">last_t</span><span class="p">))</span><span class="o">*</span><span class="n">Zi</span>
    <span class="k">return</span> <span class="n">W</span>

<span class="c1"># Generate the asset prices paths
</span><span class="n">ni</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">reps</span><span class="o">/</span><span class="n">d</span><span class="p">);</span> <span class="n">S</span> <span class="o">=</span> <span class="p">{};</span> <span class="n">W</span> <span class="o">=</span> <span class="p">{};</span>
<span class="n">U_T</span> <span class="o">=</span> <span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">random</span><span class="p">([</span><span class="n">ni</span><span class="p">,</span> <span class="n">d</span><span class="p">])</span> <span class="o">+</span> <span class="n">np</span><span class="p">.</span><span class="n">tile</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="n">d</span><span class="p">),(</span><span class="n">ni</span><span class="p">,</span><span class="mi">1</span><span class="p">)))</span><span class="o">/</span><span class="n">d</span>
<span class="n">W_T</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">T</span><span class="p">)</span><span class="o">*</span><span class="n">st</span><span class="p">.</span><span class="n">norm</span><span class="p">.</span><span class="n">ppf</span><span class="p">(</span><span class="n">U_T</span><span class="p">)</span>
<span class="n">drift</span> <span class="o">=</span> <span class="p">(</span><span class="n">r</span> <span class="o">-</span> <span class="n">sigma</span><span class="o">**</span><span class="mi">2</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">tile</span><span class="p">(</span><span class="n">all_ts</span><span class="p">,(</span><span class="n">ni</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">d</span><span class="p">):</span>
    <span class="n">W</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">generate_brownian_bridges</span><span class="p">(</span><span class="n">all_ts</span><span class="p">,</span><span class="n">W_T</span><span class="p">[:,</span><span class="n">i</span><span class="p">])</span>
    <span class="n">S</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">S0</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="n">drift</span> <span class="o">+</span> <span class="n">sigma</span><span class="o">*</span><span class="n">W</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>

<span class="c1"># Estimate the option price
</span><span class="n">eqprob_payoff</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">zeros</span><span class="p">((</span><span class="n">ni</span><span class="p">,</span><span class="n">d</span><span class="p">))</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">d</span><span class="p">):</span>
    <span class="n">eqprob_payoff</span><span class="p">[:,</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="o">-</span><span class="n">r</span><span class="o">*</span><span class="n">T</span><span class="p">)</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">maximum</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">S</span><span class="p">[</span><span class="n">i</span><span class="p">][:,</span><span class="mi">1</span><span class="p">:],</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span> <span class="o">-</span> <span class="n">K</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
<span class="n">eqprob_price</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">eqprob_payoff</span><span class="p">)</span>

<span class="c1"># Compute the confidence interval
</span><span class="n">z_alpha</span> <span class="o">=</span> <span class="mf">1.96</span> <span class="c1"># quantile for 95% confidence
</span><span class="n">eqprob_vari</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">var</span><span class="p">(</span><span class="n">eqprob_payoff</span><span class="p">,</span> <span class="n">ddof</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span> <span class="c1"># sample variance in each group
</span><span class="n">eqprob_std</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">eqprob_vari</span><span class="p">)</span><span class="o">/</span><span class="n">reps</span><span class="p">);</span> <span class="c1"># approximate SD of the estimator
</span><span class="n">eqprob_lb</span> <span class="o">=</span> <span class="n">eqprob_price</span> <span class="o">-</span> <span class="n">z_alpha</span><span class="o">*</span><span class="n">eqprob_std</span> <span class="c1"># lower bound of CI
</span><span class="n">eqprob_ub</span> <span class="o">=</span> <span class="n">eqprob_price</span> <span class="o">+</span> <span class="n">z_alpha</span><span class="o">*</span><span class="n">eqprob_std</span> <span class="c1"># upper bound of CI
</span>
<span class="c1"># Show results
</span><span class="k">print</span><span class="p">(</span><span class="s">"The point estimator from equiprobable stratification is %.3f."</span> <span class="o">%</span> <span class="n">eqprob_price</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"The approximate standard deviation of the estimator is %.3f."</span> <span class="o">%</span> <span class="n">eqprob_std</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"The approximate 95%% confidence interval is [%.3f, %.3f]."</span> <span class="o">%</span> <span class="p">(</span><span class="n">eqprob_lb</span><span class="p">,</span> <span class="n">eqprob_ub</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"The approximate variance is reduced by %.3f%%."</span> <span class="o">%</span> <span class="p">(</span><span class="mi">100</span><span class="o">-</span><span class="mi">100</span><span class="o">*</span><span class="n">eqprob_std</span><span class="o">**</span><span class="mi">2</span><span class="o">/</span><span class="n">standard_std</span><span class="o">**</span><span class="mi">2</span><span class="p">))</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">d</span><span class="p">):</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">all_ts</span><span class="p">,</span><span class="n">S</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">,:],</span><span class="n">label</span><span class="o">=</span><span class="p">(</span><span class="s">'Stratum {}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)))</span>
<span class="n">plt</span><span class="p">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'Time'</span><span class="p">);</span> <span class="n">plt</span><span class="p">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'Stock Price'</span><span class="p">);</span> <span class="n">plt</span><span class="p">.</span><span class="n">legend</span><span class="p">(</span><span class="n">loc</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">'Simulated Prices Paths from Each Stratum'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The point estimator from equiprobable stratification is 6.621.
The approximate standard deviation of the estimator is 0.045.
The approximate 95% confidence interval is [6.533, 6.709].
The approximate variance is reduced by 68.974%.
</code></pre></div></div>

<p><img src="/img/stratified_sampling/output_6_1.png" alt="png" /></p>

<h2 id="part-3-stratified-sampling-on-st-with-optimal-stratification">Part 3 Stratified Sampling on S(T) with optimal stratification</h2>
<p>Next, we want to again use terminal stratification on $S(T)$, but with the `optimalâ€™ stratification. Again consider $d = 10$ equiprobable strata, but now first use $100$ samples in each strata to get an estimate $s_i^2$ for the variance of the option price conditioned on $S(T)\in A_i$. And then we split the remaining $9,000$ samples according the the optimal splitting scheme (based on estimates $s_i$), and recompute the mean and confidence interval.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Initialize parameters
</span><span class="n">n_pilot</span> <span class="o">=</span> <span class="mi">1000</span><span class="p">;</span> <span class="n">n_formal</span> <span class="o">=</span> <span class="mi">9000</span><span class="p">;</span> 

<span class="c1"># Generate the pilot samples
</span><span class="n">pilot_ni</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">n_pilot</span><span class="o">/</span><span class="n">d</span><span class="p">);</span> <span class="n">pilot_S</span> <span class="o">=</span> <span class="p">{};</span> <span class="n">pilot_W</span> <span class="o">=</span> <span class="p">{};</span> <span class="n">pilot_payoff</span> <span class="o">=</span> <span class="p">{};</span> <span class="n">si</span> <span class="o">=</span> <span class="p">[];</span>
<span class="n">pilot_U_T</span> <span class="o">=</span> <span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">random</span><span class="p">([</span><span class="n">pilot_ni</span><span class="p">,</span> <span class="n">d</span><span class="p">])</span> <span class="o">+</span> <span class="n">np</span><span class="p">.</span><span class="n">tile</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="n">d</span><span class="p">),(</span><span class="n">pilot_ni</span><span class="p">,</span><span class="mi">1</span><span class="p">)))</span><span class="o">/</span><span class="n">d</span>
<span class="n">pilot_W_T</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">T</span><span class="p">)</span><span class="o">*</span><span class="n">st</span><span class="p">.</span><span class="n">norm</span><span class="p">.</span><span class="n">ppf</span><span class="p">(</span><span class="n">pilot_U_T</span><span class="p">)</span>
<span class="n">pilot_drift</span> <span class="o">=</span> <span class="p">(</span><span class="n">r</span> <span class="o">-</span> <span class="n">sigma</span><span class="o">**</span><span class="mi">2</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">tile</span><span class="p">(</span><span class="n">all_ts</span><span class="p">,(</span><span class="n">pilot_ni</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">d</span><span class="p">):</span>
    <span class="n">pilot_W</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">generate_brownian_bridges</span><span class="p">(</span><span class="n">all_ts</span><span class="p">,</span><span class="n">pilot_W_T</span><span class="p">[:,</span><span class="n">i</span><span class="p">])</span>
    <span class="n">pilot_S</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">S0</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="n">pilot_drift</span> <span class="o">+</span> <span class="n">sigma</span><span class="o">*</span><span class="n">pilot_W</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
    <span class="n">pilot_payoff</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="o">-</span><span class="n">r</span><span class="o">*</span><span class="n">T</span><span class="p">)</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">maximum</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">pilot_S</span><span class="p">[</span><span class="n">i</span><span class="p">][:,</span><span class="mi">1</span><span class="p">:],</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span> <span class="o">-</span> <span class="n">K</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
    <span class="n">si</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">std</span><span class="p">(</span><span class="n">pilot_payoff</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">ddof</span><span class="o">=</span><span class="mi">1</span><span class="p">))</span>

<span class="c1"># Generate formal samples
</span><span class="n">opt_ni</span> <span class="o">=</span> <span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">si</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">/</span><span class="nb">sum</span><span class="p">(</span><span class="n">si</span><span class="p">)</span><span class="o">*</span><span class="n">n_formal</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">d</span><span class="p">)];</span> <span class="n">opt_ni</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">n_formal</span> <span class="o">-</span> <span class="nb">sum</span><span class="p">(</span><span class="n">opt_ni</span><span class="p">[:</span><span class="o">-</span><span class="mi">1</span><span class="p">]);</span>
<span class="n">S</span> <span class="o">=</span> <span class="p">{};</span> <span class="n">W</span> <span class="o">=</span> <span class="p">{};</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">d</span><span class="p">):</span>
    <span class="n">U_T_i</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">random</span><span class="p">(</span><span class="n">opt_ni</span><span class="p">[</span><span class="n">i</span><span class="p">])</span><span class="o">/</span><span class="n">d</span> <span class="o">+</span> <span class="n">i</span><span class="o">/</span><span class="n">d</span>
    <span class="n">W_T_i</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">T</span><span class="p">)</span><span class="o">*</span><span class="n">st</span><span class="p">.</span><span class="n">norm</span><span class="p">.</span><span class="n">ppf</span><span class="p">(</span><span class="n">U_T_i</span><span class="p">)</span>
    <span class="n">drift_i</span> <span class="o">=</span> <span class="p">(</span><span class="n">r</span> <span class="o">-</span> <span class="n">sigma</span><span class="o">**</span><span class="mi">2</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">tile</span><span class="p">(</span><span class="n">all_ts</span><span class="p">,(</span><span class="n">opt_ni</span><span class="p">[</span><span class="n">i</span><span class="p">],</span><span class="mi">1</span><span class="p">))</span>
    <span class="n">W</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">generate_brownian_bridges</span><span class="p">(</span><span class="n">all_ts</span><span class="p">,</span><span class="n">W_T_i</span><span class="p">)</span>
    <span class="n">S</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">S0</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="n">drift_i</span> <span class="o">+</span> <span class="n">sigma</span><span class="o">*</span><span class="n">W</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>

<span class="c1"># Estimate the option price
</span><span class="n">optspl_payoff</span> <span class="o">=</span> <span class="p">{};</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">d</span><span class="p">):</span>
    <span class="n">optspl_payoff</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="o">-</span><span class="n">r</span><span class="o">*</span><span class="n">T</span><span class="p">)</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">maximum</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">S</span><span class="p">[</span><span class="n">i</span><span class="p">][:,</span><span class="mi">1</span><span class="p">:],</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span> <span class="o">-</span> <span class="n">K</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
<span class="n">optspl_price</span> <span class="o">=</span> <span class="nb">sum</span><span class="p">([</span><span class="n">optspl_payoff</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">mean</span><span class="p">()</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">d</span><span class="p">)])</span><span class="o">/</span><span class="n">d</span>

<span class="c1"># Compute the confidence interval
</span><span class="n">optspl_vari</span> <span class="o">=</span> <span class="p">[</span><span class="n">np</span><span class="p">.</span><span class="n">var</span><span class="p">(</span><span class="n">optspl_payoff</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">ddof</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">d</span><span class="p">)]</span> <span class="c1"># sample variance in each group
</span><span class="n">optspl_var</span> <span class="o">=</span> <span class="nb">sum</span><span class="p">([</span><span class="n">optspl_vari</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">/</span><span class="p">(</span><span class="n">d</span><span class="o">**</span><span class="mi">2</span><span class="o">*</span><span class="n">opt_ni</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">d</span><span class="p">)]);</span> <span class="c1"># approximate variance of the estimator
</span><span class="n">optspl_std</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">optspl_var</span><span class="p">)</span>
<span class="n">optspl_lb</span> <span class="o">=</span> <span class="n">optspl_price</span> <span class="o">-</span> <span class="n">z_alpha</span><span class="o">*</span><span class="n">optspl_std</span> <span class="c1"># lower bound of CI
</span><span class="n">optspl_ub</span> <span class="o">=</span> <span class="n">optspl_price</span> <span class="o">+</span> <span class="n">z_alpha</span><span class="o">*</span><span class="n">optspl_std</span> <span class="c1"># upper bound of CI
</span>
<span class="c1"># Show results
</span><span class="k">print</span><span class="p">(</span><span class="s">"The point estimator from the optimal sampling %.3f."</span> <span class="o">%</span> <span class="n">optspl_price</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"The approximate standard deviation of the estimator is %.3f."</span> <span class="o">%</span> <span class="n">optspl_std</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"The approximate 95%% confidence interval is [%.3f, %.3f]."</span> <span class="o">%</span> <span class="p">(</span><span class="n">optspl_lb</span><span class="p">,</span> <span class="n">optspl_ub</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"The approximate variance is reduced by %.3f%%."</span> <span class="o">%</span> <span class="p">(</span><span class="mi">100</span><span class="o">-</span><span class="mi">100</span><span class="o">*</span><span class="n">optspl_var</span><span class="o">/</span><span class="n">standard_std</span><span class="o">**</span><span class="mi">2</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The point estimator from the optimal sampling 6.624.
The approximate standard deviation of the estimator is 0.041.
The approximate 95% confidence interval is [6.543, 6.705].
The approximate variance is reduced by 73.597%.
</code></pre></div></div>

<h2 id="part-4-stratified-sampling-on-geometric-mean-of-the-sample-path">Part 4 Stratified Sampling on Geometric mean of the sample path</h2>

<p>In this part weâ€™ll use post-stratification on $\tilde{S}$ where $\tilde{S}$ is the geometric mean of the prices $S(t_1), \ldots, S(t_m)$. Again we use $d=10$ equiprobable strata. 
\(\tilde{S} = \left(\prod_{i=1}^m S(t_i)\right)^{1/m} \sim S(0)\exp\left((r-\sigma^2/2)\bar{t} + \bar{\sigma}\mathcal{N}(0, \bar{t})\right),\)
where
\(\bar{t} = \frac{1}{m}\sum_{i=1}^m t_i \quad \text{and} \quad \bar{\sigma}^2 = \frac{\sigma^2}{m^2\bar{t}}\sum_{i=1}^m [2(m-i) + 1] t_i.\)</p>

<p>When constructing our confidence interval, we use the fact that the variance of the post-stratification estimator is (asymptotically) equal to that of the proportional stratification estimator.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Compute parameters
</span><span class="n">t_bar</span> <span class="o">=</span> <span class="nb">sum</span><span class="p">(</span><span class="n">all_ts</span><span class="p">[</span><span class="mi">1</span><span class="p">:])</span><span class="o">/</span><span class="n">m</span><span class="p">;</span> 
<span class="n">sigma_bar2</span> <span class="o">=</span> <span class="n">sigma</span><span class="o">**</span><span class="mi">2</span><span class="o">/</span><span class="p">(</span><span class="n">m</span><span class="o">**</span><span class="mi">2</span><span class="p">)</span><span class="o">/</span><span class="n">t_bar</span><span class="o">*</span><span class="nb">sum</span><span class="p">([(</span><span class="mi">2</span><span class="o">*</span><span class="n">m</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="n">all_ts</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">m</span><span class="p">)]);</span> 
<span class="n">sigma_bar</span> <span class="o">=</span> <span class="n">sigma_bar2</span><span class="o">**</span><span class="mf">0.5</span><span class="p">;</span>

<span class="c1"># Generate samples of asset prices
</span><span class="n">Z</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">normal</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="p">[</span><span class="n">reps</span><span class="p">,</span> <span class="n">m</span><span class="o">+</span><span class="mi">1</span><span class="p">]);</span> <span class="n">Z</span><span class="p">[:,</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="c1"># standard normal RVs
</span><span class="n">R</span> <span class="o">=</span> <span class="n">sigma</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">T</span><span class="o">/</span><span class="n">m</span><span class="p">)</span><span class="o">*</span><span class="n">Z</span> <span class="o">+</span> <span class="p">(</span><span class="n">r</span> <span class="o">-</span> <span class="n">sigma</span><span class="o">**</span><span class="mi">2</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="n">T</span><span class="o">/</span><span class="n">m</span><span class="p">);</span> <span class="n">R</span><span class="p">[:,</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span> <span class="c1"># log returns
</span><span class="n">S</span> <span class="o">=</span> <span class="n">S0</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">cumsum</span><span class="p">(</span><span class="n">R</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">))</span><span class="c1"># cumulative sum over time
</span>
<span class="c1"># Post stratification
</span><span class="n">indicators</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">zeros</span><span class="p">((</span><span class="n">reps</span><span class="p">,</span><span class="n">d</span><span class="p">));</span> <span class="n">stratums</span> <span class="o">=</span> <span class="p">{};</span> <span class="n">Si</span> <span class="o">=</span> <span class="p">[];</span>
<span class="n">post_payoff</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="o">-</span><span class="n">r</span><span class="o">*</span><span class="n">T</span><span class="p">)</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">maximum</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">S</span><span class="p">[:,</span><span class="mi">1</span><span class="p">:],</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span> <span class="o">-</span> <span class="n">K</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
<span class="n">S_tilde</span> <span class="o">=</span> <span class="n">st</span><span class="p">.</span><span class="n">mstats</span><span class="p">.</span><span class="n">gmean</span><span class="p">(</span><span class="n">S</span><span class="p">[:,</span><span class="mi">1</span><span class="p">:],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">qt</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">S0</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">((</span><span class="n">r</span> <span class="o">-</span> <span class="n">sigma</span><span class="o">**</span><span class="mi">2</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">*</span><span class="n">t_bar</span><span class="o">+</span><span class="n">sigma_bar</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">t_bar</span><span class="p">)</span><span class="o">*</span><span class="n">x</span><span class="p">)</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">d</span><span class="p">):</span>
    <span class="n">x_low</span> <span class="o">=</span> <span class="n">st</span><span class="p">.</span><span class="n">norm</span><span class="p">.</span><span class="n">ppf</span><span class="p">(</span><span class="n">i</span><span class="o">/</span><span class="n">d</span><span class="p">);</span> <span class="n">x_up</span> <span class="o">=</span> <span class="n">st</span><span class="p">.</span><span class="n">norm</span><span class="p">.</span><span class="n">ppf</span><span class="p">((</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="n">d</span><span class="p">);</span>
    <span class="n">indicators</span><span class="p">[:,</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="p">((</span><span class="n">S_tilde</span><span class="o">&gt;=</span><span class="n">qt</span><span class="p">(</span><span class="n">x_low</span><span class="p">))</span><span class="o">&amp;</span><span class="p">(</span><span class="n">S_tilde</span><span class="o">&lt;=</span><span class="n">qt</span><span class="p">(</span><span class="n">x_up</span><span class="p">)))</span>
    <span class="n">stratums</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">post_payoff</span><span class="p">[</span><span class="n">indicators</span><span class="p">[:,</span><span class="n">i</span><span class="p">].</span><span class="n">astype</span><span class="p">(</span><span class="s">'bool'</span><span class="p">)]</span>
    <span class="n">Si</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">indicators</span><span class="p">[:,</span><span class="n">i</span><span class="p">]</span><span class="o">*</span><span class="n">post_payoff</span><span class="p">))</span>
<span class="n">Ni</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">indicators</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
<span class="n">post_price</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">mean</span><span class="p">([</span><span class="n">Si</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">/</span><span class="n">Ni</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">d</span><span class="p">)])</span>

<span class="c1"># Compute the confidence interval
</span><span class="n">var_mu_i</span> <span class="o">=</span> <span class="p">[</span><span class="n">np</span><span class="p">.</span><span class="n">var</span><span class="p">(</span><span class="n">stratums</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">ddof</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="n">Ni</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">d</span><span class="p">)]</span><span class="c1"># approximate variance in each stratum
</span><span class="n">post_var</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">var_mu_i</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="n">d</span><span class="o">**</span><span class="mi">2</span><span class="p">);</span> <span class="c1"># approximate variance of the estimator
</span><span class="n">post_std</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">post_var</span><span class="p">)</span>
<span class="n">post_lb</span> <span class="o">=</span> <span class="n">post_price</span> <span class="o">-</span> <span class="n">z_alpha</span><span class="o">*</span><span class="n">post_std</span> <span class="c1"># lower bound of CI
</span><span class="n">post_ub</span> <span class="o">=</span> <span class="n">post_price</span> <span class="o">+</span> <span class="n">z_alpha</span><span class="o">*</span><span class="n">post_std</span> <span class="c1"># upper bound of CI
</span>
<span class="c1"># Show results
</span><span class="k">print</span><span class="p">(</span><span class="s">"The point estimator from post stratification is %.3f."</span> <span class="o">%</span> <span class="n">post_price</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"The approximate standard deviation of the estimator is %.3f."</span> <span class="o">%</span> <span class="n">post_std</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"The approximate 95%% confidence interval is [%.3f, %.3f]."</span> <span class="o">%</span> <span class="p">(</span><span class="n">post_lb</span><span class="p">,</span> <span class="n">post_ub</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"The approximate variance is reduced by %.3f%%."</span> <span class="o">%</span> <span class="p">(</span><span class="mi">100</span><span class="o">-</span><span class="mi">100</span><span class="o">*</span><span class="n">post_var</span><span class="o">/</span><span class="n">standard_std</span><span class="o">**</span><span class="mi">2</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The point estimator from post stratification is 6.681.
The approximate standard deviation of the estimator is 0.023.
The approximate 95% confidence interval is [6.637, 6.725].
The approximate variance is reduced by 92.197%.
</code></pre></div></div>

:ET